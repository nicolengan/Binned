@page
@model Binned.Pages.Admin.OrdersModel
@{
    ViewData["Title"] = "All Orders";
}
<div class="row my-5 m-3">

    <div class="col-4">
        <div class="card">
            <div class="card-body">
                <h4>Total Orders</h4>
                <h5>@Model.TotalOrders.Count() | <span id="increase">@Model.increase</span><span id="sign">%</span></h5>

            </div>
        </div>
    </div>
    <div class="col-4">
        <div class="card">
            <div class="card-body">
                <h4>
                    Pending Orders
                </h4>
                <h5>@Model.TotalOrders.Where(item => item.Status != "Delivered").Count()</h5>
            </div>
        </div>
    </div>
    <div class="col-4">
        <div class="card">
            <div class="card-body">
                <h4>Delivered Orders</h4>
                <h5>@Model.TotalOrders.Where(item => item.Status == "Delivered").Count()</h5>
            </div>
        </div>
    </div>
</div>
<div id="toolbar">
    <button id="thisMonth" class="btn btn-secondary">This Month</button>
    <button id="lastMonth" class="btn btn-secondary">Last Month</button>
    <button id="reset" class="btn btn-secondary">Reset</button>
</div>
<table id="table"
       class="table mt-3"
       data-toggle="table"
       data-search="true"
       data-toolbar="#toolbar"
       data-show-columns="true"
       data-pagination="true"
       data-sortable="true">
    <thead>
        <tr>
            <th data-field="OrderId"><span name="orderId">Order ID</span></th>
            <th data-field="UserId" data-sortable="true">Email</th>
            <th data-field="OrderDate" data-sortable="true">Order Date</th>
            <th data-field="Status" data-sortable="true" data-formatter="statusFormatter">Status</th>
            <th data-field="Amount" data-sortable="true" data-formatter="priceFormatter">Amount</th>
            <th data-field="action"></th>
        </tr>
    </thead>
    <tbody>
        @{
            @foreach (var item in Model.TotalOrders)
            {
                <tr>

                    <td><span name="orderId" value="@item.OrderId">@item.OrderId</span></td>
                    <td>@item.UserId</td>
                    <td>@item.OrderDate.ToShortDateString()</td>
                    <td>@item.Status</td>
                    <td>@item.Amount</td>
                    <td>
                        <a asp-page="/Admin/Details" asp-route-id="@item.OrderId">View</a>
                    </td>
                </tr>

            }
        }
    </tbody>
</table>

<script>
    $(document).ready(function () {
        console.log("ready!");
        var element = $("#increase")
        var text = element.text()
        console.log("text " + text)
        if (text > 0) {
            element.css('color', 'green')
            $("#sign").css('color', 'green')

        }
        else if (text < 0) {
            element.css('color', 'red')
            $("#sign").css('color', 'red')

        }
    })

    $(function () {
        var month = moment().month();

        var $table = $('#table')
        var $reset = $('#reset')
        var $thisMonth = $('#thisMonth')
        var $lastMonth = $('#lastMonth')

        $thisMonth.click(function () {
            $table.bootstrapTable('filterBy', {}, {
                'filterAlgorithm': (row, filters) => {
                    console.log("this")
                    var date = row.OrderDate
                    var currMonth = moment(date, 'YYYY/MM/DD').month()
                    console.log(currMonth)
                    return currMonth === month
                }
            })
        })
        $lastMonth.click(function () {
            $table.bootstrapTable('filterBy', {}, {
                'filterAlgorithm': (row, filters) => {
                    console.log("last")
                    var date = row.OrderDate
                    var currMonth = moment(date, 'YYYY/MM/DD').month()
                    console.log(currMonth)
                    return currMonth === month - 1
                }
            })
        })
        $reset.click(function () {
            location.reload();
        })
    })

    function statusFormatter(value, row) {
        //var icon = row.id % 2 === 0 ? 'fa-star' : 'fa-star-and-crescent'
        switch (row.Status) {
            case "To Pay":
                icon = 'bi-wallet2'
                break;

            case "To Ship":
                icon = 'bi-box-seam'
                //execute code block 2
                break;

            case "To Receive":
                icon = 'bi-truck'
                //execute code block 2
                break;

            case "Delivered":
                icon = 'bi-house-check'
                break;

            default:
                icon = ""
            // code to be executed if n is different from case 1 and 2
        }
        return '<i class="bi ' + icon + '"></i> ' + value
    }
    function priceFormatter(value, row) {
    return '$' + value
  }
</script>
@page
@model Binned.Pages.Products.DetailsModel
@{
    ViewData["Title"] = "Product Details";
}
<h1 class="display-4">@ViewData["Title"]</h1>
<form class="mt-3" method="post">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="row mb-3">
        <label class="col-sm-2 col-form-label" asp-for="OurProduct.ProductId">
        </label>
        <div class="col-sm-10">
            <input class="form-control" asp-for="OurProduct.ProductId" readonly />
            <span asp-validation-for="OurProduct.ProductId"
                  class="text-danger"></span>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-2 col-form-label" asp-for="OurProduct.ProductName"></label>
        <div class="col-sm-10">
            <input class="form-control" asp-for="OurProduct.ProductName" />
            <span asp-validation-for="OurProduct.ProductName" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <label class="col-sm-2 col-form-label" asp-for="OurProduct.ProductSize"></label>
        <div class="col-sm-10 d-flex align-items-center">
            @*<div class="form-check form-check-inline">
            @Html.RadioButtonFor(m => m.OurProduct.ProductSize, "XXS", new {@class = "form-check-input"})
            <label class="form-check-label">XXS</label>
            </div>
            <div class="form-check form-check-inline">
            @Html.RadioButtonFor(m => m.OurProduct.ProductSize, "XS", new {@class = "form-check-input"})
            <label class="form-check-label">XS</label>
            </div>*@
            <div class="form-check form-check-inline">
                @Html.RadioButtonFor(m => m.OurProduct.ProductSize, "S", new {@class = "form-check-input"})
                <label class="form-check-label">S</label>
            </div>
            <div class="form-check form-check-inline">
                @Html.RadioButtonFor(m => m.OurProduct.ProductSize, "M", new {@class = "form-check-input"})
                <label class="form-check-label">M</label>
            </div>
            <div class="form-check form-check-inline">
                @Html.RadioButtonFor(m => m.OurProduct.ProductSize, "L", new {@class = "form-check-input"})
                <label class="form-check-label">L</label>
            </div>
            <div class="form-check form-check-inline">
                @Html.RadioButtonFor(m => m.OurProduct.ProductSize, "XL", new {@class = "form-check-input"})
                <label class="form-check-label">XL</label>
            </div>
            <div class="form-check form-check-inline">
                @Html.RadioButtonFor(m => m.OurProduct.ProductSize, "PLUS-SIZE", new {@class = "form-check-input"})
                <label class="form-check-label">PLUS SIZE</label>
            </div>
            <span asp-validation-for="OurProduct.ProductSize" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <label class="col-sm-2 col-form-label" asp-for="OurProduct.ProductPrice"></label>
        <div class="col-sm-10">
            <input class="form-control" type="number" asp-for="OurProduct.ProductPrice" />
            <span asp-validation-for="OurProduct.ProductPrice" class="text-danger"></span>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-2 col-form-label" asp-for="OurProduct.ProductDescription"></label>
        <div class="col-sm-10">
            <input class="form-control" asp-for="OurProduct.ProductDescription" />
            <span asp-validation-for="OurProduct.ProductDescription" class="text-danger"></span>
        </div>
    </div>
    <@*div class="row mb-3">
        <label class="col-sm-2 col-form-label" asp-for="OurProduct.ProductWaist"></label>
        <div class="col-sm-10">
            <input class="form-control" type="number" asp-for="OurProduct.ProductWaist" />
            <span asp-validation-for="OurProduct.ProductWaist" class="text-danger"></span>
        </div>
    </div>*@

    <div class="row mb-3">
        <label class="col-sm-2 col-form-label" asp-for="OurProduct.Availability"></label>
        <div class="col-sm-10 d-flex align-items-center">
            <div class="form-check form-check-inline">
                @Html.RadioButtonFor(m => m.OurProduct.Availability, "Y", new {@class = "form-check-input"})
                <label class="form-check-label">Yes</label>
            </div>
            <div class="form-check form-check-inline">
                @Html.RadioButtonFor(m => m.OurProduct.Availability, "N", new {@class = "form-check-input"})
                <label class="form-check-label">No</label>
            </div>
            <span asp-validation-for="OurProduct.Availability" class="text-danger"></span>
        </div>
    </div>
     <div class="col-md-4">
            <div class="mb-3">
                <input type="file" accept="image/*" asp-for="Upload" class="form-control" onchange="showImgPreview(this)" />
                <span asp-validation-for="Upload" class="text-danger"></span>
            </div>
            <img id="imgPreview" class="rounded-circle" style="height:300px;width:300px;object-fit:cover"
                 src="@(string.IsNullOrEmpty(Model.OurProduct.ImageURL) ? "/uploads/user.png" : Model.OurProduct.ImageURL)"
                 onerror="this.src='/uploads/product.png'" />
            <input class="form-control d-none" asp-for="OurProduct.ImageURL" />
        </div>
    <div>
        <input type="submit" value="Update" class="btn btn-primary" />
        <a class="btn btn-secondary ms-2" href="/Products">Cancel</a>
    </div>
</form>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
